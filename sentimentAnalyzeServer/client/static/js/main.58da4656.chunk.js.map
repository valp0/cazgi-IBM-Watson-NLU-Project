{"version":3,"sources":["EmotionTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmotionTable","this","props","emotions","emotionsOutput","Object","keys","map","emotion","className","React","Component","App","state","innercomp","rows","cols","id","mode","sentimentOutput","sentiment","renderTextArea","document","getElementById","value","setState","renderTextBox","sendForSentimentAnalysis","url","axios","get","then","response","output","outputString","data","label","score","style","color","fontSize","sendForEmotionAnalysis","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.58da4656.chunk.js","sourcesContent":["import React from 'react';\r\nimport './bootstrap.min.css';\r\n\r\nclass EmotionTable extends React.Component {\r\n\r\n  render() {\r\n    if (typeof this.props.emotions === \"string\") {\r\n      var emotionsOutput = this.props.emotions;\r\n    } else {\r\n      var emotionsOutput = Object.keys(this.props.emotions).map((emotion) => {\r\n        return (\r\n          <tr key={emotion}>\r\n            <td className=\"table table-bordered\"> {emotion} </td>\r\n            <td className=\"table table-bordered\"> {this.props.emotions[emotion]} </td>\r\n          </tr>\r\n        )\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {/*You can remove this line and the line below. */}\r\n        {/* {JSON.stringify(this.props.emotions)} */}\r\n        <table className=\"table table-bordered\">\r\n          <tbody>\r\n            {\r\n              //Write code to use the .map method that you worked on in the Hands-on React lab to extract the emotions\r\n              // this.state.emotionDetails\r\n              emotionsOutput\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EmotionTable;\r\n","import './bootstrap.min.css';\r\nimport './App.css';\r\nimport EmotionTable from './EmotionTable.js';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    innercomp: <textarea rows=\"4\" cols=\"50\" id=\"textinput\" />,\r\n    mode: \"text\",\r\n    sentimentOutput: [],\r\n    sentiment: true\r\n  }\r\n\r\n  renderTextArea = () => {\r\n    document.getElementById(\"textinput\").value = \"\";\r\n    if (this.state.mode === \"url\") {\r\n      this.setState({\r\n        innercomp: <textarea rows=\"4\" cols=\"50\" id=\"textinput\" />,\r\n        mode: \"text\",\r\n        sentimentOutput: [],\r\n        sentiment: true\r\n      })\r\n    }\r\n  }\r\n\r\n  renderTextBox = () => {\r\n    document.getElementById(\"textinput\").value = \"\";\r\n    if (this.state.mode === \"text\") {\r\n      this.setState({\r\n        innercomp: <textarea rows=\"1\" cols=\"50\" id=\"textinput\" />,\r\n        mode: \"url\",\r\n        sentimentOutput: [],\r\n        sentiment: true\r\n      })\r\n    }\r\n  }\r\n\r\n  sendForSentimentAnalysis = () => {\r\n    this.setState({ sentiment: true });\r\n    let ret = \"\";\r\n    let url = \".\";\r\n\r\n    if (this.state.mode === \"url\") {\r\n      url = url + \"/url/sentiment?url=\" + document.getElementById(\"textinput\").value;\r\n    } else {\r\n      url = url + \"/text/sentiment?text=\" + document.getElementById(\"textinput\").value;\r\n    }\r\n    ret = axios.get(url);\r\n    ret.then((response) => {\r\n      //Include code here to check the sentiment and format the data accordingly\r\n      /*----------------------------------------------------------------------*/\r\n      let output = \"\";\r\n      let outputString = \"Sentiment label: \" + response.data.label + \", score: \" + response.data.score;\r\n      if (response.data.label === \"positive\") {\r\n        output = <div style={{ color: \"green\", fontSize: 20 }}>{outputString}</div>\r\n      } else if (response.data.label === \"negative\") {\r\n        output = <div style={{ color: \"red\", fontSize: 20 }}>{outputString}</div>\r\n      } else {\r\n        output = <div style={{ color: \"#EEEE00\", fontSize: 20 }}>{outputString}</div>\r\n      }\r\n      this.setState({ sentimentOutput: output });\r\n      /*----------------------------------------------------------------------*/\r\n    });\r\n  }\r\n\r\n  sendForEmotionAnalysis = () => {\r\n    this.setState({ sentiment: false });\r\n    let ret = \"\";\r\n    let url = \".\";\r\n    if (this.state.mode === \"url\") {\r\n      url = url + \"/url/emotion?url=\" + document.getElementById(\"textinput\").value;\r\n    } else {\r\n      url = url + \"/text/emotion/?text=\" + document.getElementById(\"textinput\").value;\r\n    }\r\n    ret = axios.get(url);\r\n\r\n    ret.then((response) => {\r\n      this.setState({ sentimentOutput: <EmotionTable emotions={response.data} /> });\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <br />\r\n        <button className=\"btn btn-info\" onClick={this.renderTextArea}>Text</button>\r\n        <button className=\"btn btn-dark\" onClick={this.renderTextBox}>URL</button>\r\n        <br /><br />\r\n        {this.state.innercomp}\r\n        <br />\r\n        <button className=\"btn-primary\" onClick={this.sendForSentimentAnalysis}>Analyze Sentiment</button>\r\n        <button className=\"btn-primary\" onClick={this.sendForEmotionAnalysis}>Analyze Emotion</button>\r\n        <br /><br />\r\n        {this.state.sentimentOutput}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}